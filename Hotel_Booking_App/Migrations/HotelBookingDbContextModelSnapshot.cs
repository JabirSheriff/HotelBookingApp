// <auto-generated />
using System;
using Hotel_Booking_App.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel_Booking_App.Migrations
{
    [DbContext(typeof(HotelBookingDbContext))]
    partial class HotelBookingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel_Booking_App.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Hotel_Booking_App.Models.HotelOwner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("HotelOwners");
                });

            modelBuilder.Entity("Hotel_Booking_App.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("Unassigned");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 2, 8, 15, 19, 29, 436, DateTimeKind.Utc).AddTicks(6253),
                            Email = "admin@gmail.com",
                            FullName = "Admin",
                            PasswordHash = new byte[] { 4, 80, 120, 55, 72, 3, 9, 136, 5, 122, 109, 203, 62, 179, 158, 136, 29, 232, 146, 137, 16, 234, 40, 26, 14, 74, 155, 228, 249, 88, 142, 127, 156, 166, 128, 181, 65, 229, 16, 64, 242, 95, 152, 12, 53, 203, 49, 99, 172, 88, 121, 92, 118, 189, 232, 217, 166, 64, 242, 255, 174, 170, 124, 8 },
                            PasswordSalt = new byte[] { 204, 225, 181, 186, 74, 193, 140, 16, 174, 216, 191, 189, 183, 199, 25, 6, 137, 133, 161, 201, 166, 111, 30, 148, 80, 221, 239, 129, 202, 180, 189, 48, 109, 215, 226, 173, 229, 246, 205, 15, 99, 5, 233, 73, 110, 159, 100, 175, 167, 121, 35, 64, 20, 212, 206, 127, 198, 247, 234, 212, 144, 152, 126, 34, 105, 152, 219, 161, 209, 224, 71, 138, 172, 222, 43, 26, 16, 124, 203, 9, 17, 184, 25, 70, 248, 69, 193, 72, 135, 85, 164, 125, 255, 151, 103, 155, 151, 247, 86, 195, 254, 146, 154, 216, 207, 69, 3, 251, 154, 184, 164, 10, 157, 54, 153, 91, 29, 46, 226, 255, 124, 92, 152, 171, 102, 22, 254, 217 },
                            PhoneNumber = "7397388965",
                            Role = "Admin",
                            UpdatedAt = new DateTime(2025, 2, 8, 15, 19, 29, 436, DateTimeKind.Utc).AddTicks(6253)
                        });
                });

            modelBuilder.Entity("Hotel_Booking_App.Models.Customer", b =>
                {
                    b.HasOne("Hotel_Booking_App.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Hotel_Booking_App.Models.HotelOwner", b =>
                {
                    b.HasOne("Hotel_Booking_App.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
